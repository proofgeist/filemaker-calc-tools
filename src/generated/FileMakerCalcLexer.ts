// Generated from FileMakerCalc.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FileMakerCalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly AND = 19;
	public static readonly OR = 20;
	public static readonly NOT = 21;
	public static readonly LET = 22;
	public static readonly BOOLEAN = 23;
	public static readonly NUMBER = 24;
	public static readonly STRING = 25;
	public static readonly GLOBAL_VAR = 26;
	public static readonly LOCAL_VAR = 27;
	public static readonly IDENTIFIER = 28;
	public static readonly BLOCK_COMMENT = 29;
	public static readonly LINE_COMMENT = 30;
	public static readonly WS = 31;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "AND", "OR", "NOT", "LET", "BOOLEAN", "NUMBER", "STRING", "GLOBAL_VAR", 
		"LOCAL_VAR", "IDENTIFIER", "BLOCK_COMMENT", "LINE_COMMENT", "WS", "DIGIT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'['", "']'", "'*'", "'/'", "'+'", "'-'", "'&'", 
		"'='", "'\u2260'", "'<'", "'>'", "'\u2264'", "'\u2265'", "';'", "','", 
		"'::'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "AND", "OR", "NOT", 
		"LET", "BOOLEAN", "NUMBER", "STRING", "GLOBAL_VAR", "LOCAL_VAR", "IDENTIFIER", 
		"BLOCK_COMMENT", "LINE_COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FileMakerCalcLexer._LITERAL_NAMES, FileMakerCalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FileMakerCalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FileMakerCalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "FileMakerCalc.g4"; }

	// @Override
	public get ruleNames(): string[] { return FileMakerCalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FileMakerCalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FileMakerCalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FileMakerCalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02!\xE6\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11" +
		"\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x05\x18\x8A\n\x18\x03\x19\x06\x19\x8D\n\x19\r" +
		"\x19\x0E\x19\x8E\x03\x19\x03\x19\x06\x19\x93\n\x19\r\x19\x0E\x19\x94\x05" +
		"\x19\x97\n\x19\x03\x19\x03\x19\x06\x19\x9B\n\x19\r\x19\x0E\x19\x9C\x05" +
		"\x19\x9F\n\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xA5\n\x1A\f\x1A" +
		"\x0E\x1A\xA8\v\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x07\x1B\xB1\n\x1B\f\x1B\x0E\x1B\xB4\v\x1B\x03\x1C\x03\x1C\x03\x1C" +
		"\x07\x1C\xB9\n\x1C\f\x1C\x0E\x1C\xBC\v\x1C\x03\x1D\x03\x1D\x07\x1D\xC0" +
		"\n\x1D\f\x1D\x0E\x1D\xC3\v\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x07\x1E" +
		"\xC9\n\x1E\f\x1E\x0E\x1E\xCC\v\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x07\x1F\xD7\n\x1F\f\x1F\x0E\x1F\xDA" +
		"\v\x1F\x03\x1F\x03\x1F\x03 \x06 \xDF\n \r \x0E \xE0\x03 \x03 \x03!\x03" +
		"!\x03\xCA\x02\x02\"\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'" +
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C" +
		"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\x02\x03\x02\x10\x04\x02C" +
		"Ccc\x04\x02PPpp\x04\x02FFff\x04\x02QQqq\x04\x02TTtt\x04\x02VVvv\x04\x02" +
		"NNnn\x04\x02GGgg\x05\x02\f\f\x0F\x0F$$\x05\x02C\\aac|\x06\x022;C\\aac" +
		"|\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x02\xF4\x02\x03" +
		"\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t" +
		"\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03" +
		"\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03" +
		"\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03" +
		"\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03" +
		"\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02" +
		"\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02" +
		"/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02" +
		"\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02" +
		"\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x03C\x03\x02\x02\x02\x05E\x03" +
		"\x02\x02\x02\x07G\x03\x02\x02\x02\tI\x03\x02\x02\x02\vK\x03\x02\x02\x02" +
		"\rM\x03\x02\x02\x02\x0FO\x03\x02\x02\x02\x11Q\x03\x02\x02\x02\x13S\x03" +
		"\x02\x02\x02\x15U\x03\x02\x02\x02\x17W\x03\x02\x02\x02\x19Y\x03\x02\x02" +
		"\x02\x1B[\x03\x02\x02\x02\x1D]\x03\x02\x02\x02\x1F_\x03\x02\x02\x02!a" +
		"\x03\x02\x02\x02#c\x03\x02\x02\x02%e\x03\x02\x02\x02\'h\x03\x02\x02\x02" +
		")l\x03\x02\x02\x02+o\x03\x02\x02\x02-s\x03\x02\x02\x02/\x89\x03\x02\x02" +
		"\x021\x9E\x03\x02\x02\x023\xA0\x03\x02\x02\x025\xAB\x03\x02\x02\x027\xB5" +
		"\x03\x02\x02\x029\xBD\x03\x02\x02\x02;\xC4\x03\x02\x02\x02=\xD2\x03\x02" +
		"\x02\x02?\xDE\x03\x02\x02\x02A\xE4\x03\x02\x02\x02CD\x07*\x02\x02D\x04" +
		"\x03\x02\x02\x02EF\x07+\x02\x02F\x06\x03\x02\x02\x02GH\x07]\x02\x02H\b" +
		"\x03\x02\x02\x02IJ\x07_\x02\x02J\n\x03\x02\x02\x02KL\x07,\x02\x02L\f\x03" +
		"\x02\x02\x02MN\x071\x02\x02N\x0E\x03\x02\x02\x02OP\x07-\x02\x02P\x10\x03" +
		"\x02\x02\x02QR\x07/\x02\x02R\x12\x03\x02\x02\x02ST\x07(\x02\x02T\x14\x03" +
		"\x02\x02\x02UV\x07?\x02\x02V\x16\x03\x02\x02\x02WX\x07\u2262\x02\x02X" +
		"\x18\x03\x02\x02\x02YZ\x07>\x02\x02Z\x1A\x03\x02\x02\x02[\\\x07@\x02\x02" +
		"\\\x1C\x03\x02\x02\x02]^\x07\u2266\x02\x02^\x1E\x03\x02\x02\x02_`\x07" +
		"\u2267\x02\x02` \x03\x02\x02\x02ab\x07=\x02\x02b\"\x03\x02\x02\x02cd\x07" +
		".\x02\x02d$\x03\x02\x02\x02ef\x07<\x02\x02fg\x07<\x02\x02g&\x03\x02\x02" +
		"\x02hi\t\x02\x02\x02ij\t\x03\x02\x02jk\t\x04\x02\x02k(\x03\x02\x02\x02" +
		"lm\t\x05\x02\x02mn\t\x06\x02\x02n*\x03\x02\x02\x02op\t\x03\x02\x02pq\t" +
		"\x05\x02\x02qr\t\x07\x02\x02r,\x03\x02\x02\x02st\t\b\x02\x02tu\t\t\x02" +
		"\x02uv\t\x07\x02\x02v.\x03\x02\x02\x02wx\x07V\x02\x02xy\x07t\x02\x02y" +
		"z\x07w\x02\x02z\x8A\x07g\x02\x02{|\x07H\x02\x02|}\x07c\x02\x02}~\x07n" +
		"\x02\x02~\x7F\x07u\x02\x02\x7F\x8A\x07g\x02\x02\x80\x81\x07v\x02\x02\x81" +
		"\x82\x07t\x02\x02\x82\x83\x07w\x02\x02\x83\x8A\x07g\x02\x02\x84\x85\x07" +
		"h\x02\x02\x85\x86\x07c\x02\x02\x86\x87\x07n\x02\x02\x87\x88\x07u\x02\x02" +
		"\x88\x8A\x07g\x02\x02\x89w\x03\x02\x02\x02\x89{\x03\x02\x02\x02\x89\x80" +
		"\x03\x02\x02\x02\x89\x84\x03\x02\x02\x02\x8A0\x03\x02\x02\x02\x8B\x8D" +
		"\x05A!\x02\x8C\x8B\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x8C\x03" +
		"\x02\x02\x02\x8E\x8F\x03\x02\x02\x02\x8F\x96\x03\x02\x02\x02\x90\x92\x07" +
		"0\x02\x02\x91\x93\x05A!\x02\x92\x91\x03\x02\x02\x02\x93\x94\x03\x02\x02" +
		"\x02\x94\x92\x03\x02\x02\x02\x94\x95\x03\x02\x02\x02\x95\x97\x03\x02\x02" +
		"\x02\x96\x90\x03\x02\x02\x02\x96\x97\x03\x02\x02\x02\x97\x9F\x03\x02\x02" +
		"\x02\x98\x9A\x070\x02\x02\x99\x9B\x05A!\x02\x9A\x99\x03\x02\x02\x02\x9B" +
		"\x9C\x03\x02\x02\x02\x9C\x9A\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D" +
		"\x9F\x03\x02\x02\x02\x9E\x8C\x03\x02\x02\x02\x9E\x98\x03\x02\x02\x02\x9F" +
		"2\x03\x02\x02\x02\xA0\xA6\x07$\x02\x02\xA1\xA5\n\n\x02\x02\xA2\xA3\x07" +
		"$\x02\x02\xA3\xA5\x07$\x02\x02\xA4\xA1\x03\x02\x02\x02\xA4\xA2\x03\x02" +
		"\x02\x02\xA5\xA8\x03\x02\x02\x02\xA6\xA4\x03\x02\x02\x02\xA6\xA7\x03\x02" +
		"\x02\x02\xA7\xA9\x03\x02\x02\x02\xA8\xA6\x03\x02\x02\x02\xA9\xAA\x07$" +
		"\x02\x02\xAA4\x03\x02\x02\x02\xAB\xAC\x07&\x02\x02\xAC\xAD\x07&\x02\x02" +
		"\xAD\xAE\x03\x02\x02\x02\xAE\xB2\t\v\x02\x02\xAF\xB1\t\f\x02\x02\xB0\xAF" +
		"\x03\x02\x02\x02\xB1\xB4\x03\x02\x02\x02\xB2\xB0\x03\x02\x02\x02\xB2\xB3" +
		"\x03\x02\x02\x02\xB36\x03\x02\x02\x02\xB4\xB2\x03\x02\x02\x02\xB5\xB6" +
		"\x07&\x02\x02\xB6\xBA\t\v\x02\x02\xB7\xB9\t\f\x02\x02\xB8\xB7\x03\x02" +
		"\x02\x02\xB9\xBC\x03\x02\x02\x02\xBA\xB8\x03\x02\x02\x02\xBA\xBB\x03\x02" +
		"\x02\x02\xBB8\x03\x02\x02\x02\xBC\xBA\x03\x02\x02\x02\xBD\xC1\t\v\x02" +
		"\x02\xBE\xC0\t\f\x02\x02\xBF\xBE\x03\x02\x02\x02\xC0\xC3\x03\x02\x02\x02" +
		"\xC1\xBF\x03\x02\x02\x02\xC1\xC2\x03\x02\x02\x02\xC2:\x03\x02\x02\x02" +
		"\xC3\xC1\x03\x02\x02\x02\xC4\xC5\x071\x02\x02\xC5\xC6\x07,\x02\x02\xC6" +
		"\xCA\x03\x02\x02\x02\xC7\xC9\v\x02\x02\x02\xC8\xC7\x03\x02\x02\x02\xC9" +
		"\xCC\x03\x02\x02\x02\xCA\xCB\x03\x02\x02\x02\xCA\xC8\x03\x02\x02\x02\xCB" +
		"\xCD\x03\x02\x02\x02\xCC\xCA\x03\x02\x02\x02\xCD\xCE\x07,\x02\x02\xCE" +
		"\xCF\x071\x02\x02\xCF\xD0\x03\x02\x02\x02\xD0\xD1\b\x1E\x02\x02\xD1<\x03" +
		"\x02\x02\x02\xD2\xD3\x071\x02\x02\xD3\xD4\x071\x02\x02\xD4\xD8\x03\x02" +
		"\x02\x02\xD5\xD7\n\r\x02\x02\xD6\xD5\x03\x02\x02\x02\xD7\xDA\x03\x02\x02" +
		"\x02\xD8\xD6\x03\x02\x02\x02\xD8\xD9\x03\x02\x02\x02\xD9\xDB\x03\x02\x02" +
		"\x02\xDA\xD8\x03\x02\x02\x02\xDB\xDC\b\x1F\x02\x02\xDC>\x03\x02\x02\x02" +
		"\xDD\xDF\t\x0E\x02\x02\xDE\xDD\x03\x02\x02\x02\xDF\xE0\x03\x02\x02\x02" +
		"\xE0\xDE\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02" +
		"\xE2\xE3\b \x02\x02\xE3@\x03\x02\x02\x02\xE4\xE5\t\x0F\x02\x02\xE5B\x03" +
		"\x02\x02\x02\x11\x02\x89\x8E\x94\x96\x9C\x9E\xA4\xA6\xB2\xBA\xC1\xCA\xD8" +
		"\xE0\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FileMakerCalcLexer.__ATN) {
			FileMakerCalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FileMakerCalcLexer._serializedATN));
		}

		return FileMakerCalcLexer.__ATN;
	}

}


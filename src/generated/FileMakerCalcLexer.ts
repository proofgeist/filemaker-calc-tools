// Generated from FileMakerCalc.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FileMakerCalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly AND = 18;
	public static readonly OR = 19;
	public static readonly NOT = 20;
	public static readonly BOOLEAN = 21;
	public static readonly NUMBER = 22;
	public static readonly STRING = 23;
	public static readonly IDENTIFIER = 24;
	public static readonly BLOCK_COMMENT = 25;
	public static readonly LINE_COMMENT = 26;
	public static readonly WS = 27;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"AND", "OR", "NOT", "BOOLEAN", "NUMBER", "STRING", "IDENTIFIER", "BLOCK_COMMENT", 
		"LINE_COMMENT", "WS", "DIGIT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'['", "']'", "'*'", "'/'", "'+'", "'-'", "'&'", 
		"'='", "'\u2260'", "'<'", "'>'", "'\u2264'", "'\u2265'", "','", "'::'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "AND", "OR", "NOT", "BOOLEAN", 
		"NUMBER", "STRING", "IDENTIFIER", "BLOCK_COMMENT", "LINE_COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FileMakerCalcLexer._LITERAL_NAMES, FileMakerCalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FileMakerCalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FileMakerCalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "FileMakerCalc.g4"; }

	// @Override
	public get ruleNames(): string[] { return FileMakerCalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FileMakerCalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FileMakerCalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FileMakerCalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1D\xC6\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03" +
		"\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x05\x16|\n\x16\x03\x17\x06\x17\x7F\n\x17\r\x17\x0E\x17\x80\x03\x17" +
		"\x03\x17\x06\x17\x85\n\x17\r\x17\x0E\x17\x86\x05\x17\x89\n\x17\x03\x17" +
		"\x03\x17\x06\x17\x8D\n\x17\r\x17\x0E\x17\x8E\x05\x17\x91\n\x17\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x07\x18\x97\n\x18\f\x18\x0E\x18\x9A\v\x18\x03" +
		"\x18\x03\x18\x03\x19\x03\x19\x07\x19\xA0\n\x19\f\x19\x0E\x19\xA3\v\x19" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xA9\n\x1A\f\x1A\x0E\x1A\xAC\v" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x07\x1B\xB7\n\x1B\f\x1B\x0E\x1B\xBA\v\x1B\x03\x1B\x03\x1B\x03\x1C" +
		"\x06\x1C\xBF\n\x1C\r\x1C\x0E\x1C\xC0\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03" +
		"\xAA\x02\x02\x1E\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x02\x03\x02\x0E\x04\x02CCcc\x04\x02PPpp\x04\x02FFff\x04\x02" +
		"QQqq\x04\x02TTtt\x04\x02VVvv\x05\x02\f\f\x0F\x0F$$\x05\x02C\\aac|\x06" +
		"\x022;C\\aac|\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x02" +
		"\xD2\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02" +
		"\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02" +
		"\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02" +
		"\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02" +
		"\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02" +
		"\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'" +
		"\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02" +
		"\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02" +
		"\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x03;\x03\x02\x02\x02\x05=\x03" +
		"\x02\x02\x02\x07?\x03\x02\x02\x02\tA\x03\x02\x02\x02\vC\x03\x02\x02\x02" +
		"\rE\x03\x02\x02\x02\x0FG\x03\x02\x02\x02\x11I\x03\x02\x02\x02\x13K\x03" +
		"\x02\x02\x02\x15M\x03\x02\x02\x02\x17O\x03\x02\x02\x02\x19Q\x03\x02\x02" +
		"\x02\x1BS\x03\x02\x02\x02\x1DU\x03\x02\x02\x02\x1FW\x03\x02\x02\x02!Y" +
		"\x03\x02\x02\x02#[\x03\x02\x02\x02%^\x03\x02\x02\x02\'b\x03\x02\x02\x02" +
		")e\x03\x02\x02\x02+{\x03\x02\x02\x02-\x90\x03\x02\x02\x02/\x92\x03\x02" +
		"\x02\x021\x9D\x03\x02\x02\x023\xA4\x03\x02\x02\x025\xB2\x03\x02\x02\x02" +
		"7\xBE\x03\x02\x02\x029\xC4\x03\x02\x02\x02;<\x07*\x02\x02<\x04\x03\x02" +
		"\x02\x02=>\x07+\x02\x02>\x06\x03\x02\x02\x02?@\x07]\x02\x02@\b\x03\x02" +
		"\x02\x02AB\x07_\x02\x02B\n\x03\x02\x02\x02CD\x07,\x02\x02D\f\x03\x02\x02" +
		"\x02EF\x071\x02\x02F\x0E\x03\x02\x02\x02GH\x07-\x02\x02H\x10\x03\x02\x02" +
		"\x02IJ\x07/\x02\x02J\x12\x03\x02\x02\x02KL\x07(\x02\x02L\x14\x03\x02\x02" +
		"\x02MN\x07?\x02\x02N\x16\x03\x02\x02\x02OP\x07\u2262\x02\x02P\x18\x03" +
		"\x02\x02\x02QR\x07>\x02\x02R\x1A\x03\x02\x02\x02ST\x07@\x02\x02T\x1C\x03" +
		"\x02\x02\x02UV\x07\u2266\x02\x02V\x1E\x03\x02\x02\x02WX\x07\u2267\x02" +
		"\x02X \x03\x02\x02\x02YZ\x07.\x02\x02Z\"\x03\x02\x02\x02[\\\x07<\x02\x02" +
		"\\]\x07<\x02\x02]$\x03\x02\x02\x02^_\t\x02\x02\x02_`\t\x03\x02\x02`a\t" +
		"\x04\x02\x02a&\x03\x02\x02\x02bc\t\x05\x02\x02cd\t\x06\x02\x02d(\x03\x02" +
		"\x02\x02ef\t\x03\x02\x02fg\t\x05\x02\x02gh\t\x07\x02\x02h*\x03\x02\x02" +
		"\x02ij\x07V\x02\x02jk\x07t\x02\x02kl\x07w\x02\x02l|\x07g\x02\x02mn\x07" +
		"H\x02\x02no\x07c\x02\x02op\x07n\x02\x02pq\x07u\x02\x02q|\x07g\x02\x02" +
		"rs\x07v\x02\x02st\x07t\x02\x02tu\x07w\x02\x02u|\x07g\x02\x02vw\x07h\x02" +
		"\x02wx\x07c\x02\x02xy\x07n\x02\x02yz\x07u\x02\x02z|\x07g\x02\x02{i\x03" +
		"\x02\x02\x02{m\x03\x02\x02\x02{r\x03\x02\x02\x02{v\x03\x02\x02\x02|,\x03" +
		"\x02\x02\x02}\x7F\x059\x1D\x02~}\x03\x02\x02\x02\x7F\x80\x03\x02\x02\x02" +
		"\x80~\x03\x02\x02\x02\x80\x81\x03\x02\x02\x02\x81\x88\x03\x02\x02\x02" +
		"\x82\x84\x070\x02\x02\x83\x85\x059\x1D\x02\x84\x83\x03\x02\x02\x02\x85" +
		"\x86\x03\x02\x02\x02\x86\x84\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x87" +
		"\x89\x03\x02\x02\x02\x88\x82\x03\x02\x02\x02\x88\x89\x03\x02\x02\x02\x89" +
		"\x91\x03\x02\x02\x02\x8A\x8C\x070\x02\x02\x8B\x8D\x059\x1D\x02\x8C\x8B" +
		"\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x8C\x03\x02\x02\x02\x8E\x8F" +
		"\x03\x02\x02\x02\x8F\x91\x03\x02\x02\x02\x90~\x03\x02\x02\x02\x90\x8A" +
		"\x03\x02\x02\x02\x91.\x03\x02\x02\x02\x92\x98\x07$\x02\x02\x93\x97\n\b" +
		"\x02\x02\x94\x95\x07$\x02\x02\x95\x97\x07$\x02\x02\x96\x93\x03\x02\x02" +
		"\x02\x96\x94\x03\x02\x02\x02\x97\x9A\x03\x02\x02\x02\x98\x96\x03\x02\x02" +
		"\x02\x98\x99\x03\x02\x02\x02\x99\x9B\x03\x02\x02\x02\x9A\x98\x03\x02\x02" +
		"\x02\x9B\x9C\x07$\x02\x02\x9C0\x03\x02\x02\x02\x9D\xA1\t\t\x02\x02\x9E" +
		"\xA0\t\n\x02\x02\x9F\x9E\x03\x02\x02\x02\xA0\xA3\x03\x02\x02\x02\xA1\x9F" +
		"\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA22\x03\x02\x02\x02\xA3\xA1" +
		"\x03\x02\x02\x02\xA4\xA5\x071\x02\x02\xA5\xA6\x07,\x02\x02\xA6\xAA\x03" +
		"\x02\x02\x02\xA7\xA9\v\x02\x02\x02\xA8\xA7\x03\x02\x02\x02\xA9\xAC\x03" +
		"\x02\x02\x02\xAA\xAB\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAB\xAD\x03" +
		"\x02\x02\x02\xAC\xAA\x03\x02\x02\x02\xAD\xAE\x07,\x02\x02\xAE\xAF\x07" +
		"1\x02\x02\xAF\xB0\x03\x02\x02\x02\xB0\xB1\b\x1A\x02\x02\xB14\x03\x02\x02" +
		"\x02\xB2\xB3\x071\x02\x02\xB3\xB4\x071\x02\x02\xB4\xB8\x03\x02\x02\x02" +
		"\xB5\xB7\n\v\x02\x02\xB6\xB5\x03\x02\x02\x02\xB7\xBA\x03\x02\x02\x02\xB8" +
		"\xB6\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBB\x03\x02\x02\x02\xBA" +
		"\xB8\x03\x02\x02\x02\xBB\xBC\b\x1B\x02\x02\xBC6\x03\x02\x02\x02\xBD\xBF" +
		"\t\f\x02\x02\xBE\xBD\x03\x02\x02\x02\xBF\xC0\x03\x02\x02\x02\xC0\xBE\x03" +
		"\x02\x02\x02\xC0\xC1\x03\x02\x02\x02\xC1\xC2\x03\x02\x02\x02\xC2\xC3\b" +
		"\x1C\x02\x02\xC38\x03\x02\x02\x02\xC4\xC5\t\r\x02\x02\xC5:\x03\x02\x02" +
		"\x02\x0F\x02{\x80\x86\x88\x8E\x90\x96\x98\xA1\xAA\xB8\xC0\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FileMakerCalcLexer.__ATN) {
			FileMakerCalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FileMakerCalcLexer._serializedATN));
		}

		return FileMakerCalcLexer.__ATN;
	}

}

